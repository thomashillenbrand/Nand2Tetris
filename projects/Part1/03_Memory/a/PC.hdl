// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
	
	// increment the current register state
	Inc16 (in=registerOut, out=increment);

	// Emulate the if/elseif statements via a series of Mux gates.
	// 1. First gate's inputs are the current output of the
	// 	  register (registerOut) and the incremented value. 
	//	  If inc == 1, the incremented value is passed thru
	//	  as m1, otherwise registerOut is passed thru as m1.
	// 2. Second gate's inputs are m1 and the PC chip's input
	//	  value (in). If load == 1, the in value is passed thru
	//	  as m2, otherise m1 is passed thru as m2.
	// 3. Third gate's inputs are m2 and false (a 16-bit zero constant).
	//	  If reset == 1, the false value is passed thru as MuxOut,
	//	  otherwise m2 is passed thru as MuxOut.

    Mux16 (a=registerOut, b=increment, sel=inc, out=m1);
    Mux16 (a=m1, b=in, sel=load, out=m2);
    Mux16 (a=m2, b=false, sel=reset, out=MuxOut);

	// Register to store/output the counter value
	Register (in=MuxOut, load=true, out=registerOut, out=out);
	
}
