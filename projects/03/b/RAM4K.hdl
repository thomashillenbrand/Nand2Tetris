// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl
// Updated by Tom Hillenbrand 1/26/2018

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    
    //Choose RAM unit
    DMux8Way (in=load, sel=address[0..2],
    	a=ram1Load,b=ram2Load,c=ram3Load,d=ram4Load,
    	e=ram5Load,f=ram6Load,g=ram7Load,h=ram8Load);

    // Set of 8 RAM512 chips = RAM4K
    RAM512 (in=in, load=ram1Load, address=address[3..11], out=ram1);
    RAM512 (in=in, load=ram2Load, address=address[3..11], out=ram2);
    RAM512 (in=in, load=ram3Load, address=address[3..11], out=ram3);
    RAM512 (in=in, load=ram4Load, address=address[3..11], out=ram4);
    RAM512 (in=in, load=ram5Load, address=address[3..11], out=ram5);
    RAM512 (in=in, load=ram6Load, address=address[3..11], out=ram6);
    RAM512 (in=in, load=ram7Load, address=address[3..11], out=ram7);
    RAM512 (in=in, load=ram8Load, address=address[3..11], out=ram8);

    //Pick output
    Mux8Way16 (a=ram1, b=ram2, c=ram3, d=ram4, e=ram5, f=ram6, g=ram7, h=ram8,
    	sel=address[0..2], out=out);

}