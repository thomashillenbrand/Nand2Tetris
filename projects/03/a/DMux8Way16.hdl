// This file was created by Thomas Hillenbrand
// as an extra component used as part of 
// the course www.nand2tetris.org
// Created: 1/25/2018

/**
 * 8-way, 16-bit demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 *
 */

CHIP DMux8Way16 {
    IN in[16], sel[3];
    OUT a[16], b[16], c[16], d[16], e[16], f[16], g[16], h[16];

    PARTS:
    DMux4Way16 (in=in, sel=sel[1..2], a=t1, b=t2, c=t3, d=t4);
	
	DMux16 (in=t1, sel=sel[0], a=a, b=b);
	DMux16 (in=t2, sel=sel[0], a=c, b=d);
	DMux16 (in=t3, sel=sel[0], a=e, b=f);
	DMux16 (in=t4, sel=sel[0], a=g, b=h);
}